@model IMS.Application.Models.ModulePageModel
@{
    ViewBag.Title = "List of Module";
}

<script src="../../Scripts/Request/Agency.js" type="text/javascript"></script>
<link href="../../Content/Admin.css" rel="stylesheet" type="text/css" />
<script type="text/javascript" src="../../Scripts/Helper/humane.min.js"></script>

<div class = "main-input-wrap">
<div style=" padding: 30px 30px 0px 30px">
    <form id="input-form" name="input-form" style=" padding: 20px">
    @Html.ValidationSummary(true, "Agent creation was unsuccessful. Please correct the errors and try again.")
    <div>
        <fieldset>
            <legend>Module Information</legend>
            <div class="editor-label">
                @Html.LabelFor(m => m.CurrentModule.Name)
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(m => m.CurrentModule.Name)
                @Html.ValidationMessageFor(m => m.CurrentModule.Name)
            </div>
            <div class="editor-label">
                @Html.LabelFor(m => m.CurrentModule.IsVisible)
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(m => m.CurrentModule.IsVisible, new { @type = "hidden" })
                @Html.ValidationMessageFor(m => m.CurrentModule.IsVisible)
                <SELECT name="isValidOption" id="isValidOption">
                 <OPTION VALUE="True">True
                 <OPTION VALUE="False" SELECTED>False
                </SELECT>
            </div>
            <div class="editor-label">
                @Html.LabelFor(m => m.CurrentModule.WithAdd)
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(m => m.CurrentModule.WithAdd, new { @type = "hidden" })
                @Html.ValidationMessageFor(m => m.CurrentModule.WithAdd)
                <SELECT name="isValidOption" id="isValidOption">
                 <OPTION VALUE="True">True
                 <OPTION VALUE="False" SELECTED>False
                </SELECT>
            </div>
            <div class="editor-label">
                @Html.LabelFor(m => m.CurrentModule.WithEdit)
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(m => m.CurrentModule.WithEdit, new { @type = "hidden" })
                @Html.ValidationMessageFor(m => m.CurrentModule.WithEdit)
                <SELECT name="isValidOption" id="isValidOption">
                 <OPTION VALUE="True">True
                 <OPTION VALUE="False" SELECTED>False
                </SELECT>
            </div>
            <div class="editor-label">
                @Html.LabelFor(m => m.CurrentModule.WithDelete)
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(m => m.CurrentModule.WithDelete, new { @type = "hidden" })
                @Html.ValidationMessageFor(m => m.CurrentModule.WithDelete)
                <SELECT name="isValidOption" id="isValidOption">
                 <OPTION VALUE="True">True
                 <OPTION VALUE="False" SELECTED>False
                </SELECT>
            </div>
            <div class="editor-label">
                @Html.LabelFor(m => m.CurrentModule.WithPost)
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(m => m.CurrentModule.WithPost, new { @type = "hidden" })
                @Html.ValidationMessageFor(m => m.CurrentModule.WithPost)
                <SELECT name="isValidOption" id="isValidOption">
                 <OPTION VALUE="True">True
                 <OPTION VALUE="False" SELECTED>False
                </SELECT>
            </div>
            <div class="editor-label">
                @Html.LabelFor(m => m.CurrentModule.WithVoid)
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(m => m.CurrentModule.WithVoid, new { @type = "hidden" })
                @Html.ValidationMessageFor(m => m.CurrentModule.WithVoid)
                <SELECT name="isValidOption" id="isValidOption">
                 <OPTION VALUE="True">True
                 <OPTION VALUE="False" SELECTED>False
                </SELECT>
            </div>
            <div class="editor-field" hidden="hidden">
                @Html.TextBoxFor(m => m.PkeyForView)
            </div>
            <hr />
            <p>
                <input type="submit" value="Add" id="cmdAdd"/>
                <input type="submit" value="Remove" id="cmdRemove" />
                <input type="submit" value="Update" id="cmdUpdate" />
            </p>
        </fieldset>
    </div>
    </form>
    </div>
<hr />

<h2>List of Modules</h2>
<div class="main-grid-wrap" style=" padding: 20px" >
<table id="agent-list">
    <tr>
        <th>
            Module Name
        </th>
        <th>
            Is Visible
        </th>
        <th>
            With Add
        </th>
        <th>
            With Edit
        </th>
        <th>
            With Delete
        </th>
        <th>
            With Post
        </th>
        <th>
            With Void
        </th>
        <th style="display:none"></th>
        <th></th>
    </tr>

    @foreach (var item in Model.AllModules) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Name)
        </td>
        <td>
            @Html.CheckBoxFor(modelItem => item.IsVisible)
        </td>
        <td>
            @Html.CheckBoxFor(modelItem => item.WithAdd)
        </td>
        <td>
            @Html.CheckBoxFor(modelItem => item.WithEdit)
        </td>
        <td>
            @Html.CheckBoxFor(modelItem => item.WithDelete)
        </td>
        <td>
            @Html.CheckBoxFor(modelItem => item.WithPost)
        </td>
        <td>
            @Html.CheckBoxFor(modelItem => item.WithVoid)
        </td>
        <td style="display:none">
            @Html.DisplayFor(modelItem => item.PK_MstrModules)
        </td>
    </tr>
}
</table>
</div>
</div>